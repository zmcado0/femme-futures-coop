import React, { useState, useEffect } from 'react';
import { Search, Mail, Coffee, Edit, Calendar, User, ArrowRight, Plus, Save, X } from 'lucide-react';

const NewsletterPlatform = () => {
  const [newsletters, setNewsletters] = useState([
    {
      id: 1,
      title: "Breaking Through the Glass Ceiling: 5 Strategies That Actually Work",
      date: "2024-08-22",
      excerpt: "After interviewing 50+ women in leadership roles, I've identified the strategies that consistently lead to career advancement...",
      content: `After interviewing 50+ women in leadership roles, I've identified the strategies that consistently lead to career advancement.

**1. Strategic Visibility**
Don't just do great work—make sure the right people know about it. This means documenting your wins, speaking up in meetings, and volunteering for high-visibility projects.

**2. Building Your Internal Brand**
Your reputation precedes you in every room. Focus on being known for something specific—whether it's problem-solving, innovation, or leadership.

**3. Mentorship and Sponsorship**
Find mentors who can guide you and sponsors who can advocate for you when you're not in the room.

**4. Negotiation Skills**
Practice negotiating not just salary, but responsibilities, resources, and opportunities.

**5. Continuous Learning**
Stay ahead by consistently developing new skills and staying current with industry trends.

The key is implementing these consistently, not perfectly.`
    },
    {
      id: 2,
      title: "The Confidence Code: Why Self-Doubt Is Your Career's Silent Killer",
      date: "2024-08-15",
      excerpt: "Research shows that women are 30% more likely to experience imposter syndrome. Here's how to turn self-doubt into your superpower...",
      content: `Research shows that women are 30% more likely to experience imposter syndrome. Here's how to turn self-doubt into your superpower.

**Understanding the Confidence Gap**
The confidence gap isn't just in your head—it's a documented phenomenon that affects career progression, salary negotiations, and leadership opportunities.

**Reframing Self-Doubt**
Instead of seeing self-doubt as weakness, view it as thoroughness and high standards. Channel that energy into preparation and excellence.

**Practical Confidence-Building Strategies:**
- Keep a "wins journal" to track your accomplishments
- Practice power posing before important meetings
- Prepare specific examples of your impact for conversations
- Surround yourself with supportive colleagues who celebrate your wins

**The Preparation Advantage**
Often, what feels like imposter syndrome is actually your brain telling you to prepare more. Use that signal as motivation to become the expert in the room.

Remember: Confidence isn't about feeling fearless—it's about acting despite the fear.`
    },
    {
      id: 3,
      title: "Networking Without the Ick Factor: Authentic Relationship Building",
      date: "2024-08-08",
      excerpt: "Transform networking from transactional interactions into meaningful professional relationships with these authentic approaches...",
      content: `Transform networking from transactional interactions into meaningful professional relationships with these authentic approaches.

**Shift Your Mindset**
Stop thinking "What can I get?" and start thinking "How can I help?" This simple shift changes everything about how you approach professional relationships.

**Quality Over Quantity**
Focus on building 5-10 strong professional relationships rather than collecting hundreds of business cards.

**Authentic Networking Strategies:**

**1. The Helper's Approach**
Offer value first. Share resources, make introductions, or offer your expertise before asking for anything.

**2. Common Ground Connection**
Find shared experiences, challenges, or interests. This creates genuine connection beyond just professional utility.

**3. Follow-Up Meaningfully**
Reference specific parts of your conversation and include relevant resources or connections.

**4. Long-term Thinking**
Build relationships before you need them. The best networking happens when there's no immediate ask.

**Digital Networking**
LinkedIn can be powerful when you comment thoughtfully on posts, share valuable content, and engage genuinely with your network's updates.

Remember: The best networks are built on mutual respect and genuine interest in others' success.`
    }
  ]);

  const [subscribers, setSubscribers] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedNewsletter, setSelectedNewsletter] = useState(null);
  const [showAdmin, setShowAdmin] = useState(false);
  const [newEmail, setNewEmail] = useState('');
  const [showSuccess, setShowSuccess] = useState(false);
  
  // New newsletter form state
  const [newNewsletter, setNewNewsletter] = useState({
    title: '',
    excerpt: '',
    content: ''
  });
  const [showNewForm, setShowNewForm] = useState(false);

  const filteredNewsletters = newsletters.filter(newsletter =>
    newsletter.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
    newsletter.content.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const handleSubscribe = () => {
    if (newEmail && newEmail.includes('@')) {
      setSubscribers([...subscribers, { email: newEmail, date: new Date().toISOString().split('T')[0] }]);
      setNewEmail('');
      setShowSuccess(true);
      setTimeout(() => setShowSuccess(false), 3000);
    }
  };

  const handleCreateNewsletter = () => {
    if (newNewsletter.title && newNewsletter.excerpt && newNewsletter.content) {
      const newsletter = {
        id: newsletters.length + 1,
        title: newNewsletter.title,
        date: new Date().toISOString().split('T')[0],
        excerpt: newNewsletter.excerpt,
        content: newNewsletter.content
      };
      setNewsletters([newsletter, ...newsletters]);
      setNewNewsletter({ title: '', excerpt: '', content: '' });
      setShowNewForm(false);
    }
  };

  if (selectedNewsletter) {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="max-w-4xl mx-auto px-4 py-8">
          <button
            onClick={() => setSelectedNewsletter(null)}
            className="flex items-center text-blue-600 hover:text-blue-800 mb-6"
          >
            ← Back to Archive
          </button>
          
          <article className="bg-white rounded-lg shadow-sm p-8">
            <h1 className="text-3xl font-bold text-gray-900 mb-4">{selectedNewsletter.title}</h1>
            <div className="flex items-center text-gray-600 mb-8">
              <Calendar className="w-4 h-4 mr-2" />
              {new Date(selectedNewsletter.date).toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}
            </div>
            
            <div className="prose prose-lg max-w-none">
              {selectedNewsletter.content.split('\n').map((paragraph, index) => {
                if (paragraph.startsWith('**') && paragraph.endsWith('**')) {
                  return (
                    <h3 key={index} className="text-xl font-semibold text-gray-900 mt-6 mb-3">
                      {paragraph.slice(2, -2)}
                    </h3>
                  );
                }
                if (paragraph.trim() === '') return <br key={index} />;
                return <p key={index} className="mb-4 text-gray-700 leading-relaxed">{paragraph}</p>;
              })}
            </div>
          </article>
        </div>
      </div>
    );
  }

  if (showAdmin) {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="max-w-6xl mx-auto px-4 py-8">
          <div className="flex justify-between items-center mb-8">
            <h1 className="text-2xl font-bold text-gray-900">Admin Dashboard</h1>
            <button
              onClick={() => setShowAdmin(false)}
              className="text-gray-600 hover:text-gray-800"
            >
              <X className="w-6 h-6" />
            </button>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* Create New Newsletter */}
            <div className="bg-white rounded-lg shadow-sm p-6">
              <div className="flex justify-between items-center mb-6">
                <h2 className="text-xl font-semibold text-gray-900">Create New Newsletter</h2>
                <button
                  onClick={() => setShowNewForm(!showNewForm)}
                  className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
                >
                  <Plus className="w-4 h-4 mr-2" />
                  New Post
                </button>
              </div>

              {showNewForm && (
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">Title</label>
                    <input
                      type="text"
                      value={newNewsletter.title}
                      onChange={(e) => setNewNewsletter({...newNewsletter, title: e.target.value})}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      placeholder="Newsletter title..."
                    />
                  </div>
                  
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">Excerpt</label>
                    <textarea
                      value={newNewsletter.excerpt}
                      onChange={(e) => setNewNewsletter({...newNewsletter, excerpt: e.target.value})}
                      rows={2}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      placeholder="Brief excerpt for the archive..."
                    />
                  </div>
                  
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">Content</label>
                    <textarea
                      value={newNewsletter.content}
                      onChange={(e) => setNewNewsletter({...newNewsletter, content: e.target.value})}
                      rows={8}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      placeholder="Full newsletter content..."
                    />
                  </div>
                  
                  <div className="flex space-x-3">
                    <button
                      onClick={handleCreateNewsletter}
                      className="flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700"
                    >
                      <Save className="w-4 h-4 mr-2" />
                      Publish
                    </button>
                    <button
                      onClick={() => setShowNewForm(false)}
                      className="px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50"
                    >
                      Cancel
                    </button>
                  </div>
                </div>
              )}
            </div>

            {/* Subscriber Management */}
            <div className="bg-white rounded-lg shadow-sm p-6">
              <h2 className="text-xl font-semibold text-gray-900 mb-6">Subscribers ({subscribers.length})</h2>
              
              <div className="space-y-3 max-h-64 overflow-y-auto">
                {subscribers.length === 0 ? (
                  <p className="text-gray-500">No subscribers yet.</p>
                ) : (
                  subscribers.map((subscriber, index) => (
                    <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center">
                        <User className="w-4 h-4 text-gray-400 mr-3" />
                        <span className="text-sm text-gray-900">{subscriber.email}</span>
                      </div>
                      <span className="text-xs text-gray-500">{subscriber.date}</span>
                    </div>
                  ))
                )}
              </div>
            </div>
          </div>

          {/* Newsletter Archive */}
          <div className="mt-8 bg-white rounded-lg shadow-sm p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-6">Published Newsletters</h2>
            <div className="space-y-4">
              {newsletters.map((newsletter) => (
                <div key={newsletter.id} className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                  <div>
                    <h3 className="font-medium text-gray-900">{newsletter.title}</h3>
                    <p className="text-sm text-gray-500">{newsletter.date}</p>
                  </div>
                  <button
                    onClick={() => setSelectedNewsletter(newsletter)}
                    className="text-blue-600 hover:text-blue-800 text-sm"
                  >
                    View
                  </button>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-6xl mx-auto px-4 py-6">
          <div className="flex justify-between items-center">
            <div>
              <h1 className="text-3xl font-bold text-gray-900">Rise & Thrive</h1>
              <p className="text-gray-600 mt-2">Professional development insights for ambitious women</p>
            </div>
            <button
              onClick={() => setShowAdmin(true)}
              className="flex items-center px-4 py-2 text-gray-600 hover:text-gray-800"
            >
              <Edit className="w-4 h-4 mr-2" />
              Admin
            </button>
          </div>
        </div>
      </header>

      <div className="max-w-6xl mx-auto px-4 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Main Content */}
          <div className="lg:col-span-2">
            {/* Search */}
            <div className="relative mb-8">
              <Search className="w-5 h-5 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" />
              <input
                type="text"
                placeholder="Search newsletters..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>

            {/* Newsletter Archive */}
            <div className="space-y-8">
              {filteredNewsletters.map((newsletter) => (
                <article key={newsletter.id} className="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow">
                  <div className="flex items-center text-sm text-gray-500 mb-3">
                    <Calendar className="w-4 h-4 mr-2" />
                    {new Date(newsletter.date).toLocaleDateString('en-US', { 
                      year: 'numeric', 
                      month: 'long', 
                      day: 'numeric' 
                    })}
                  </div>
                  
                  <h2 className="text-2xl font-bold text-gray-900 mb-4 hover:text-blue-600 cursor-pointer" 
                      onClick={() => setSelectedNewsletter(newsletter)}>
                    {newsletter.title}
                  </h2>
                  
                  <p className="text-gray-700 mb-4 leading-relaxed">{newsletter.excerpt}</p>
                  
                  <button
                    onClick={() => setSelectedNewsletter(newsletter)}
                    className="flex items-center text-blue-600 hover:text-blue-800 font-medium"
                  >
                    Read more <ArrowRight className="w-4 h-4 ml-1" />
                  </button>
                </article>
              ))}
            </div>
          </div>

          {/* Sidebar */}
          <div className="space-y-8">
            {/* About */}
            <div className="bg-white rounded-lg shadow-sm p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">About Rise & Thrive</h3>
              <p className="text-gray-600 leading-relaxed mb-4">
                Weekly insights and strategies to help ambitious women advance their careers, 
                build confidence, and create lasting professional success.
              </p>
              <p className="text-gray-600 text-sm">
                Written by a career strategist with 10+ years of experience helping women 
                break barriers and achieve their professional goals.
              </p>
            </div>

            {/* Newsletter Signup */}
            <div className="bg-blue-50 rounded-lg shadow-sm p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Subscribe to Newsletter</h3>
              <p className="text-gray-600 mb-4">
                Get weekly professional development insights delivered to your inbox.
              </p>
              
              {showSuccess && (
                <div className="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg mb-4">
                  Thanks for subscribing! Welcome to the community.
                </div>
              )}
              
              <div className="space-y-3">
                <input
                  type="email"
                  placeholder="Enter your email"
                  value={newEmail}
                  onChange={(e) => setNewEmail(e.target.value)}
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
                <button
                  onClick={handleSubscribe}
                  className="w-full flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
                >
                  <Mail className="w-4 h-4 mr-2" />
                  Subscribe
                </button>
              </div>
            </div>

            {/* Buy Me a Coffee */}
            <div className="bg-yellow-50 rounded-lg shadow-sm p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Support This Newsletter</h3>
              <p className="text-gray-600 mb-4">
                If you find value in these insights, consider buying me a coffee to support 
                continued research and writing.
              </p>
              <a
                href="https://buymeacoffee.com"
                target="_blank"
                rel="noopener noreferrer"
                className="w-full flex items-center justify-center px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600"
              >
                <Coffee className="w-4 h-4 mr-2" />
                Buy Me a Coffee
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default NewsletterPlatform;
git push
